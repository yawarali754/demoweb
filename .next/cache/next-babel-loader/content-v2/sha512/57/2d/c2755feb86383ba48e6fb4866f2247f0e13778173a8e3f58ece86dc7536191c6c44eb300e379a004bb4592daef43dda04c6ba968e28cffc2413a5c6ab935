{"ast":null,"code":"import { useSelector } from 'react-redux';\n\nconst isBrowser = () => false;\n\nconst ProtectedRoutes = ({\n  router,\n  children\n}) => {\n  const userLogin = useSelector(state => state.userLogin);\n  const isAuthenticated = userLogin === null || userLogin === void 0 ? void 0 : userLogin.Email;\n  let unprotectedRoutes = ['/', '/flight', '/flight/fsearch', '/flightBooking', '/auth', '/signup', '/aboutus', '/privacypolicy', '/forgotpass', '/packagesDetail', '/dealDetail', '/bookingConfirmed', '/packages', '/deals', '/morePackages', '/moreDeals'];\n  let pathIsProtected = unprotectedRoutes.indexOf(router.pathname) === -1;\n\n  if (isBrowser() && !isAuthenticated && pathIsProtected) {\n    router.push('/');\n  }\n\n  return children;\n};\n\nexport default ProtectedRoutes;","map":{"version":3,"sources":["D:/flight380-Mar12-master/public/js/ProtectedRoutes.js"],"names":["useSelector","isBrowser","ProtectedRoutes","router","children","userLogin","state","isAuthenticated","Email","unprotectedRoutes","pathIsProtected","indexOf","pathname","push"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,SAAS,GAAG,WAAlB;;AACA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA0B;AAChD,QAAMC,SAAS,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAME,eAAe,GAAGF,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEG,KAAnC;AAEA,MAAIC,iBAAiB,GAAG,CACtB,GADsB,EAEtB,SAFsB,EAGtB,iBAHsB,EAItB,gBAJsB,EAKtB,OALsB,EAMtB,SANsB,EAOtB,UAPsB,EAQtB,gBARsB,EAStB,aATsB,EAUtB,iBAVsB,EAWtB,aAXsB,EAYtB,mBAZsB,EAatB,WAbsB,EActB,QAdsB,EAetB,eAfsB,EAgBtB,YAhBsB,CAAxB;AAmBA,MAAIC,eAAe,GAAGD,iBAAiB,CAACE,OAAlB,CAA0BR,MAAM,CAACS,QAAjC,MAA+C,CAAC,CAAtE;;AAEA,MAAIX,SAAS,MAAM,CAACM,eAAhB,IAAmCG,eAAvC,EAAwD;AACtDP,IAAAA,MAAM,CAACU,IAAP,CAAY,GAAZ;AACD;;AAED,SAAOT,QAAP;AACD,CA9BD;;AA+BA,eAAeF,eAAf","sourcesContent":["import { useSelector } from 'react-redux'\n\nconst isBrowser = () => typeof window !== 'undefined'\nconst ProtectedRoutes = ({ router, children }) => {\n  const userLogin = useSelector((state) => state.userLogin)\n  const isAuthenticated = userLogin?.Email\n\n  let unprotectedRoutes = [\n    '/',\n    '/flight',\n    '/flight/fsearch',\n    '/flightBooking',\n    '/auth',\n    '/signup',\n    '/aboutus',\n    '/privacypolicy',\n    '/forgotpass',\n    '/packagesDetail',\n    '/dealDetail',\n    '/bookingConfirmed',\n    '/packages',\n    '/deals',\n    '/morePackages',\n    '/moreDeals'\n  ]\n\n  let pathIsProtected = unprotectedRoutes.indexOf(router.pathname) === -1\n\n  if (isBrowser() && !isAuthenticated && pathIsProtected) {\n    router.push('/')\n  }\n\n  return children\n}\nexport default ProtectedRoutes\n"]},"metadata":{},"sourceType":"module"}