{"ast":null,"code":"import _regeneratorRuntime from \"D:/flight380-Mar12-master/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getTokenSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loginSaga),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(verifyEmailSaga),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(verifyOtpSaga),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(setPasswordSaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(updatePasswordSaga),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(logOutSaga);\n\n//this file will contain our actions, and api that gonna dispatching a reducer\nimport { put, call } from 'redux-saga/effects';\nimport { getTokenService, loginUserService, registerUserService, setPasswordService, updatePasswordService, verifyEmailService, verifyOtpService } from '../services/authenticationService';\nimport { loginFailed, loginSuccess, logout, setPassSuccess, setPasswordFailed, tokenReceived, tokenRecFailed, verifyEmailFailed, verifyEmailSuccess, verifyOtpFailed, verifyOTPSuccess } from '../actions/authentication';\nimport * as types from '../actions/userActions';\nexport function getTokenSaga(payload) {\n  var tokenRec, data;\n  return _regeneratorRuntime.wrap(function getTokenSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getTokenService, payload);\n\n        case 3:\n          tokenRec = _context.sent;\n          data = tokenRec;\n          _context.next = 7;\n          return put(tokenReceived(data));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 13;\n          return put(tokenRecFailed(_context.t0));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\nexport function loginSaga(payload) {\n  var _response, data;\n\n  return _regeneratorRuntime.wrap(function loginSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loginUserService, payload);\n\n        case 3:\n          _response = _context2.sent;\n          data = _response;\n          _context2.next = 7;\n          return put(loginSuccess(data));\n\n        case 7:\n          _context2.next = 13;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 13;\n          return put({\n            type: types.USER_LOGIN_FAIL,\n            error: _context2.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 9]]);\n}\nexport function verifyEmailSaga(payload) {\n  var res, data;\n  return _regeneratorRuntime.wrap(function verifyEmailSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(verifyEmailService, payload);\n\n        case 3:\n          res = _context3.sent;\n          data = res;\n          _context3.next = 7;\n          return put(verifyEmailSuccess(data));\n\n        case 7:\n          _context3.next = 13;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 13;\n          return put(verifyEmailFailed(_context3.t0));\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\nexport function verifyOtpSaga(payload) {\n  var _response2;\n\n  return _regeneratorRuntime.wrap(function verifyOtpSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(verifyOtpService, payload);\n\n        case 3:\n          _response2 = _context4.sent;\n          _context4.next = 6;\n          return put(verifyOTPSuccess(_response2));\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put(verifyOtpFailed(response.error));\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\nexport function setPasswordSaga(payload) {\n  var pass;\n  return _regeneratorRuntime.wrap(function setPasswordSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(setPasswordService, payload);\n\n        case 3:\n          pass = _context5.sent;\n          _context5.next = 6;\n          return put(setPassSuccess(pass));\n\n        case 6:\n          _context5.next = 13;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put(setPasswordFailed(_context5.t0));\n\n        case 12:\n          return _context5.abrupt(\"return\", _context5.t0);\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\nexport function updatePasswordSaga(payload) {\n  var updatePass;\n  return _regeneratorRuntime.wrap(function updatePasswordSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(updatePasswordService, payload);\n\n        case 3:\n          updatePass = _context6.sent;\n          _context6.next = 6;\n          return put[{\n            type: types.UPDATE_PASSWORD,\n            updatePass: updatePass\n          }];\n\n        case 6:\n          _context6.next = 11;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          return _context6.abrupt(\"return\", _context6.t0);\n\n        case 11:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\nexport function logOutSaga() {\n  return _regeneratorRuntime.wrap(function logOutSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return put(logout());\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["D:/flight380-Mar12-master/redux/sagas/userSaga.js"],"names":["getTokenSaga","loginSaga","verifyEmailSaga","verifyOtpSaga","setPasswordSaga","updatePasswordSaga","logOutSaga","put","call","getTokenService","loginUserService","registerUserService","setPasswordService","updatePasswordService","verifyEmailService","verifyOtpService","loginFailed","loginSuccess","logout","setPassSuccess","setPasswordFailed","tokenReceived","tokenRecFailed","verifyEmailFailed","verifyEmailSuccess","verifyOtpFailed","verifyOTPSuccess","types","payload","tokenRec","data","response","type","USER_LOGIN_FAIL","error","res","pass","updatePass","UPDATE_PASSWORD"],"mappings":"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","sourcesContent":["//this file will contain our actions, and api that gonna dispatching a reducer\nimport { put, call } from 'redux-saga/effects'\nimport {\n  getTokenService,\n  loginUserService,\n  registerUserService,\n  setPasswordService,\n  updatePasswordService,\n  verifyEmailService,\n  verifyOtpService,\n} from '../services/authenticationService'\nimport {\n  loginFailed,\n  loginSuccess,\n  logout,\n  setPassSuccess,\n  setPasswordFailed,\n  tokenReceived,\n  tokenRecFailed,\n  verifyEmailFailed,\n  verifyEmailSuccess,\n  verifyOtpFailed,\n  verifyOTPSuccess,\n} from '../actions/authentication'\nimport * as types from '../actions/userActions'\n\nexport function* getTokenSaga(payload) {\n  try {\n    const tokenRec = yield call(getTokenService, payload)\n    const data = tokenRec\n    yield put(tokenReceived(data))\n  } catch (error) {\n    yield put(tokenRecFailed(error))\n  }\n}\n\nexport function* loginSaga(payload) {\n  try {\n    const response = yield call(loginUserService, payload)\n    const data = response\n    yield put(loginSuccess(data))\n  } catch (error) {\n    yield put({ type: types.USER_LOGIN_FAIL, error })\n  }\n}\nexport function* verifyEmailSaga(payload) {\n  try {\n    const res = yield call(verifyEmailService, payload)\n    const data = res\n    yield put(verifyEmailSuccess(data))\n  } catch (error) {\n    yield put(verifyEmailFailed(error))\n  }\n}\nexport function* verifyOtpSaga(payload) {\n  try {\n    const response = yield call(verifyOtpService, payload)\n    yield put(verifyOTPSuccess(response))\n  } catch (error) {\n    yield put(verifyOtpFailed(response.error))\n  }\n}\nexport function* setPasswordSaga(payload) {\n  try {\n    const pass = yield call(setPasswordService, payload)\n    yield put(setPassSuccess(pass))\n  } catch (error) {\n    yield put(setPasswordFailed(error))\n    return error\n  }\n}\nexport function* updatePasswordSaga(payload) {\n  try {\n    const updatePass = yield call(updatePasswordService, payload)\n    yield put[{ type: types.UPDATE_PASSWORD, updatePass }]\n  } catch (error) {\n    return error\n  }\n}\n\nexport function* logOutSaga() {\n  yield put(logout())\n}\n"]},"metadata":{},"sourceType":"module"}