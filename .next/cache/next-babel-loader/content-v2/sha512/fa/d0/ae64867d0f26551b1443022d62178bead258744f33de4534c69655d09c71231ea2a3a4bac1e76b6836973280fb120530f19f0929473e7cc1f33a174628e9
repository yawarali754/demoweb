{"ast":null,"code":"import * as types from './userActions';\nexport var getTokerAction = function getTokerAction(token) {\n  return {\n    type: types.GET_TOKEN,\n    token: token,\n    loading: true\n  };\n};\nexport var tokenReceived = function tokenReceived(tokenRec) {\n  return {\n    type: types.TOKEN_RECEIVED,\n    tokenRec: tokenRec\n  };\n};\nexport var tokenRecFailed = function tokenRecFailed(error) {\n  return {\n    type: types.TOKEN_RECEIVED_FAILED,\n    error: error\n  };\n};\nexport var loginUserAction = function loginUserAction(user) {\n  return {\n    type: types.USER_LOGIN_REQUEST,\n    user: user,\n    loading: true\n  };\n};\nexport var loginSuccess = function loginSuccess(user) {\n  return {\n    type: types.USER_LOGIN_SUCCESS,\n    user: user,\n    loading: false\n  };\n};\nexport var loginFailed = function loginFailed(error) {\n  return {\n    type: types.USER_LOGIN_FAIL,\n    error: error,\n    loading: false\n  };\n};\nexport var logout = function logout() {\n  localStorage.removeItem('userInfo');\n  return {\n    type: types.USER_LOGOUT\n  };\n};\nexport var verifyEmail = function verifyEmail(email) {\n  return {\n    type: types.VERIFY_EMAIL,\n    email: email,\n    loading: true\n  };\n};\nexport var verifyEmailSuccess = function verifyEmailSuccess(email) {\n  return {\n    type: types.VERIFY_EMAIL_SUCCESS,\n    email: email,\n    loading: false\n  };\n};\nexport var verifyEmailFailed = function verifyEmailFailed(error) {\n  return {\n    type: types.VERIFY_EMAIL_FAIL,\n    error: error,\n    loading: false\n  };\n};\nexport var verifyOTP = function verifyOTP(otp) {\n  return {\n    type: types.CONFIRM_OTP,\n    otp: otp,\n    loading: true\n  };\n};\nexport var verifyOTPSuccess = function verifyOTPSuccess(otp) {\n  return {\n    type: types.CONFIRM_OTP_SUCCESS,\n    otp: otp,\n    loading: false\n  };\n};\nexport var verifyOtpFailed = function verifyOtpFailed(error) {\n  return {\n    type: types.OTP_CONFIRMATION_FAIL,\n    error: error\n  };\n};\nexport var setPass = function setPass(password) {\n  return {\n    type: types.SET_PASSWORD,\n    password: password,\n    loading: true\n  };\n};\nexport var setPassSuccess = function setPassSuccess(password) {\n  return {\n    type: types.SET_PASSWORD_SUCCESS,\n    password: password,\n    loading: false\n  };\n};\nexport var setPasswordFailed = function setPasswordFailed(error) {\n  return {\n    type: types.SET_PASSWORD_FAIL,\n    error: error\n  };\n};\nexport var updatePassword = function updatePassword(password) {\n  return {\n    type: types.UPDATE_PASSWORD,\n    password: password\n  };\n};","map":{"version":3,"sources":["D:/flight380-Mar12-master/redux/actions/authentication.js"],"names":["types","getTokerAction","token","type","GET_TOKEN","loading","tokenReceived","tokenRec","TOKEN_RECEIVED","tokenRecFailed","error","TOKEN_RECEIVED_FAILED","loginUserAction","user","USER_LOGIN_REQUEST","loginSuccess","USER_LOGIN_SUCCESS","loginFailed","USER_LOGIN_FAIL","logout","localStorage","removeItem","USER_LOGOUT","verifyEmail","email","VERIFY_EMAIL","verifyEmailSuccess","VERIFY_EMAIL_SUCCESS","verifyEmailFailed","VERIFY_EMAIL_FAIL","verifyOTP","otp","CONFIRM_OTP","verifyOTPSuccess","CONFIRM_OTP_SUCCESS","verifyOtpFailed","OTP_CONFIRMATION_FAIL","setPass","password","SET_PASSWORD","setPassSuccess","SET_PASSWORD_SUCCESS","setPasswordFailed","SET_PASSWORD_FAIL","updatePassword","UPDATE_PASSWORD"],"mappings":"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","sourcesContent":["import * as types from './userActions'\n\nexport const getTokerAction = (token) => {\n  return {\n    type: types.GET_TOKEN,\n    token,\n    loading: true,\n  }\n}\nexport const tokenReceived = (tokenRec) => {\n  return {\n    type: types.TOKEN_RECEIVED,\n    tokenRec,\n  }\n}\nexport const tokenRecFailed = (error) => {\n  return {\n    type: types.TOKEN_RECEIVED_FAILED,\n    error,\n  }\n}\n\nexport const loginUserAction = (user) => {\n  return {\n    type: types.USER_LOGIN_REQUEST,\n    user,\n    loading: true,\n  }\n}\nexport const loginSuccess = (user) => {\n  return {\n    type: types.USER_LOGIN_SUCCESS,\n    user,\n    loading: false,\n  }\n}\nexport const loginFailed = (error) => {\n  return {\n    type: types.USER_LOGIN_FAIL,\n    error,\n    loading: false,\n  }\n}\n\nexport const logout = () => {\n  localStorage.removeItem('userInfo')\n  return {\n    type: types.USER_LOGOUT,\n  }\n}\nexport const verifyEmail = (email) => {\n  return {\n    type: types.VERIFY_EMAIL,\n    email,\n    loading: true,\n  }\n}\nexport const verifyEmailSuccess = (email) => {\n  return {\n    type: types.VERIFY_EMAIL_SUCCESS,\n    email,\n    loading: false,\n  }\n}\nexport const verifyEmailFailed = (error) => {\n  return {\n    type: types.VERIFY_EMAIL_FAIL,\n    error,\n    loading: false,\n  }\n}\nexport const verifyOTP = (otp) => {\n  return {\n    type: types.CONFIRM_OTP,\n    otp,\n    loading: true,\n  }\n}\nexport const verifyOTPSuccess = (otp) => {\n  return {\n    type: types.CONFIRM_OTP_SUCCESS,\n    otp,\n    loading: false,\n  }\n}\nexport const verifyOtpFailed = (error) => {\n  return {\n    type: types.OTP_CONFIRMATION_FAIL,\n    error,\n  }\n}\nexport const setPass = (password) => {\n  return {\n    type: types.SET_PASSWORD,\n    password,\n    loading: true,\n  }\n}\nexport const setPassSuccess = (password) => {\n  return {\n    type: types.SET_PASSWORD_SUCCESS,\n    password,\n    loading: false,\n  }\n}\nexport const setPasswordFailed = (error) => {\n  return {\n    type: types.SET_PASSWORD_FAIL,\n    error,\n  }\n}\nexport const updatePassword = (password) => {\n  return {\n    type: types.UPDATE_PASSWORD,\n    password,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}