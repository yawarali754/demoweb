{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { requestFlightData } from '../../redux/actions/flightActions';\nimport { CircularProgress } from '@material-ui/core';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { formatDate } from '../../public/js/utils';\nimport { Input } from '@material-ui/core';\n\nconst airports = require('iata-airports/active_airports.json');\n\nconst airlines = require('iata-airlines/active_airlines.json');\n\nconst FlightSearch = ({\n  selectedOfferFromCity,\n  selectedOfferToCity\n}) => {\n  var _flightData$searchDat;\n\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const flightData = useSelector(state => state.flightData);\n  const {\n    loading\n  } = flightData;\n  const myData = flightData === null || flightData === void 0 ? void 0 : (_flightData$searchDat = flightData.searchData) === null || _flightData$searchDat === void 0 ? void 0 : _flightData$searchDat.formData;\n  const {\n    0: flyingFrom,\n    1: setFlyingFrom\n  } = useState(selectedOfferFromCity || (myData === null || myData === void 0 ? void 0 : myData.flyingFrom) || '');\n  const {\n    0: flyingTo,\n    1: setFlyingTo\n  } = useState(selectedOfferToCity || (myData === null || myData === void 0 ? void 0 : myData.flyingTo) || '');\n  var date = new Date();\n  date.setDate(date.getDate() + 7);\n  const {\n    0: returnDate,\n    1: setReturnDate\n  } = useState((myData === null || myData === void 0 ? void 0 : myData.returnDate) || '' || date);\n  const {\n    0: departureDate,\n    1: setDepartureDate\n  } = useState((myData === null || myData === void 0 ? void 0 : myData.departureDate) || new Date());\n  const {\n    0: adultPassengers,\n    1: setAdultPassengers\n  } = useState((myData === null || myData === void 0 ? void 0 : myData.adultPassengers) || 1);\n  const {\n    0: childPassengers,\n    1: setChildrens\n  } = useState((myData === null || myData === void 0 ? void 0 : myData.childPassengers) || 0);\n  const {\n    0: youthPassengers,\n    1: setYouth\n  } = useState((myData === null || myData === void 0 ? void 0 : myData.youthPassengers) || 0);\n  const {\n    0: infantPassengers,\n    1: setInfant\n  } = useState((myData === null || myData === void 0 ? void 0 : myData.infantPassengers) || 0);\n  const {\n    0: totalPassenger,\n    1: setTotalPassenger\n  } = useState([adultPassengers + childPassengers + youthPassengers + infantPassengers]);\n  const {\n    0: directFlight,\n    1: setDirectFlight\n  } = useState((myData === null || myData === void 0 ? void 0 : myData.directFlight) || false);\n  const {\n    0: filterBy,\n    1: setFilterBy\n  } = useState('callback');\n\n  const filterByCallback = (option, props) => option.fs.toLowerCase().indexOf(props.text.toLowerCase()) !== -1;\n\n  const {\n    0: airline,\n    1: setAirline\n  } = useState('');\n  const {\n    0: prefferedClass,\n    1: setPrefferedClass\n  } = useState((myData === null || myData === void 0 ? void 0 : myData.prefferedClass) || '');\n  const {\n    0: tripType,\n    1: setTripType\n  } = useState((myData === null || myData === void 0 ? void 0 : myData.tripType) || 'roundTrip');\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: multiFlightSegmentForm,\n    1: setMultiFlightSegmentForm\n  } = useState((myData === null || myData === void 0 ? void 0 : myData.multiFlightSegmentForm) || [{\n    flyingFrom: '',\n    flyingTo: '',\n    departureDate: ''\n  }, {\n    flyingFrom: '',\n    flyingTo: '',\n    departureDate: ''\n  }]);\n  useEffect(async () => {\n    console.log('Values updated', selectedOfferFromCity, selectedOfferToCity);\n    await setFlyingFrom(selectedOfferFromCity);\n    await setFlyingTo(selectedOfferToCity);\n\n    if (selectedOfferFromCity) {\n      document.querySelector('#button1').click();\n      console.log('clicked');\n    }\n  }, [selectedOfferFromCity, selectedOfferToCity]);\n  useEffect(() => {\n    console.log(\"errors\", errors);\n  }, [errors]);\n\n  const validate = values => {\n    const errorsObj = {};\n\n    if (!values.flyingFrom) {\n      errorsObj.flyingFrom = \"Flying From is required\";\n    }\n\n    if (!values.flyingTo) {\n      errorsObj.flyingTo = \"Flying To is required\";\n    }\n\n    if (!values.returnDate) {\n      errorsObj.returnDate = \"Return Date is required\";\n    }\n\n    if (!values.departureDate) {\n      errorsObj.departureDate = \"Departure Date is required\";\n    }\n\n    console.log(\"errorsObj\", errorsObj);\n    return errorsObj;\n  };\n\n  const codeToCity = code => {\n    let items = airports.filter(item => item.fs === code);\n    return `${items[0].fs} - ${items[0].city} - ${items[0].name} - ${items[0].countryName}`;\n  };\n\n  const oneWeek = date => {\n    const nextWeek = new Date(date.getFullYear(), date.getMonth(), date.getDate() + 7);\n    return nextWeek;\n  };\n\n  const addFlightSegment = () => {\n    if (multiFlightSegmentForm.length > 4) return;\n    setMultiFlightSegmentForm([...multiFlightSegmentForm, {\n      flyingFrom: '',\n      flyingTo: '',\n      departureDate: ''\n    }]);\n  };\n\n  const removeFlightSegment = index => {\n    let multiCityState = multiFlightSegmentForm;\n    const abc = multiCityState.splice(index, 1);\n    setMultiFlightSegmentForm([...multiCityState]);\n  };\n\n  const changeFlightSegmentValue = (name, value, index) => {\n    let multiCityData = multiFlightSegmentForm;\n    multiCityData[index][name] = value;\n    setMultiFlightSegmentForm([...multiCityData]);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => setShow(false);\n\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    0: MyFocusState,\n    1: setMyFocusState\n  } = useState(false);\n\n  const handleFlightSearch = e => {\n    const originCity = flyingFrom || (myData === null || myData === void 0 ? void 0 : myData.flyingFrom);\n    const destinationCity = flyingTo || (myData === null || myData === void 0 ? void 0 : myData.flyingTo);\n    e.preventDefault();\n    const formData = {\n      flyingFrom: originCity,\n      flyingTo: destinationCity,\n      returnDate,\n      departureDate,\n      adultPassengers,\n      childPassengers,\n      youthPassengers,\n      infantPassengers,\n      totalPassenger,\n      prefferedClass,\n      multiFlightSegmentForm,\n      tripType,\n      directFlight\n    };\n    setErrors(validate(formData));\n    console.log(\"formData\", formData);\n\n    if (!(adultPassengers > 0 || youthPassengers > 0 || childPassengers > 0 || infantPassengers > 0)) {\n      // dataMissingError()\n      return;\n    }\n\n    const dataa = {\n      OTA_AirLowFareSearchRQ: {\n        DirectFlightsOnly: directFlight,\n        AvailableFlightsOnly: true,\n        Version: '4.1.0',\n        POS: {\n          Source: [{\n            PseudoCityCode: 'I8QK',\n            RequestorID: {\n              Type: '1',\n              ID: '1',\n              CompanyName: {\n                Code: 'TN',\n                content: 'TN'\n              }\n            }\n          }]\n        },\n        OriginDestinationInformation: [],\n        TravelPreferences: {\n          ValidInterlineTicket: true\n        },\n        TravelerInfoSummary: {\n          SeatsRequested: [parseInt(adultPassengers) + parseInt(childPassengers) + parseInt(infantPassengers) + parseInt(youthPassengers)],\n          AirTravelerAvail: [{\n            PassengerTypeQuantity: []\n          }]\n        },\n        TPA_Extensions: {\n          IntelliSellTransaction: {\n            RequestType: {\n              Name: '50ITINS'\n            }\n          }\n        }\n      }\n    };\n\n    if (adultPassengers > 0) {\n      dataa.OTA_AirLowFareSearchRQ.TravelerInfoSummary.AirTravelerAvail[0].PassengerTypeQuantity.push({\n        Code: 'ADT',\n        Quantity: parseInt(adultPassengers),\n        TPA_Extensions: {\n          VoluntaryChanges: {\n            Match: 'Info'\n          }\n        }\n      });\n    }\n\n    if (childPassengers > 0) {\n      dataa.OTA_AirLowFareSearchRQ.TravelerInfoSummary.AirTravelerAvail[0].PassengerTypeQuantity.push({\n        Code: 'CNN',\n        Quantity: parseInt(childPassengers),\n        TPA_Extensions: {\n          VoluntaryChanges: {\n            Match: 'Info'\n          }\n        }\n      });\n    }\n\n    if (youthPassengers > 0) {\n      dataa.OTA_AirLowFareSearchRQ.TravelerInfoSummary.AirTravelerAvail[0].PassengerTypeQuantity.push({\n        Code: 'YTH',\n        Quantity: parseInt(youthPassengers),\n        TPA_Extensions: {\n          VoluntaryChanges: {\n            Match: 'Info'\n          }\n        }\n      });\n    }\n\n    if (infantPassengers > 0) {\n      dataa.OTA_AirLowFareSearchRQ.TravelerInfoSummary.AirTravelerAvail[0].PassengerTypeQuantity.push({\n        Code: 'INF',\n        Quantity: parseInt(infantPassengers),\n        TPA_Extensions: {\n          VoluntaryChanges: {\n            Match: 'Info'\n          }\n        }\n      });\n    }\n\n    if (airline !== '') {\n      dataa.OTA_AirLowFareSearchRQ.TravelPreferences.VendorPref = [{\n        Code: airline,\n        PreferLevel: 'Preferred'\n      }];\n    }\n\n    if (tripType === 'multiCity') {\n      for (let [index, data] of multiFlightSegmentForm.entries()) {\n        if (!data.flyingFrom || !data.flyingTo || !data.departureDate) {\n          // dataMissingError()\n          return;\n        } else {\n          dataa.OTA_AirLowFareSearchRQ.OriginDestinationInformation.push({\n            RPH: index + 1 + '',\n            DepartureDateTime: `${formatDate(data.departureDate)}`,\n            OriginLocation: {\n              LocationCode: data.flyingFrom\n            },\n            DestinationLocation: {\n              LocationCode: data.flyingTo\n            }\n          });\n        }\n      }\n\n      dispatch(requestFlightData({\n        dataa,\n        formData\n      }));\n      router.push('/flight');\n    } else {\n      if (originCity && destinationCity && departureDate) {\n        dataa.OTA_AirLowFareSearchRQ.OriginDestinationInformation.push({\n          RPH: '1',\n          DepartureDateTime: `${formatDate(departureDate)}`,\n          OriginLocation: {\n            LocationCode: originCity\n          },\n          DestinationLocation: {\n            LocationCode: destinationCity\n          }\n        });\n\n        if (tripType === 'roundTrip') {\n          if (!returnDate) {\n            // dataMissingError()\n            return;\n          }\n\n          dataa.OTA_AirLowFareSearchRQ.OriginDestinationInformation.push({\n            RPH: '2',\n            DepartureDateTime: `${formatDate(returnDate)}`,\n            OriginLocation: {\n              LocationCode: destinationCity\n            },\n            DestinationLocation: {\n              LocationCode: originCity\n            }\n          });\n        }\n\n        dispatch(requestFlightData({\n          dataa,\n          formData\n        }));\n        router.push('/flight');\n      } else {// dataMissingError()\n      }\n    }\n  };\n\n  const dataMissingError = () => {\n    toast.error('Please fill all required fields', {\n      position: 'bottom-right'\n    });\n  };\n\n  const handleModalSubmit = e => {\n    e.preventDefault();\n    handleClose();\n  };\n\n  const filterByFields = ['fs', 'city'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\nexport default FlightSearch;","map":{"version":3,"sources":["D:/flight380-Mar12-master/components/FlightSearch/FlightSearch.js"],"names":["React","useState","useEffect","useRouter","Typeahead","useDispatch","useSelector","requestFlightData","CircularProgress","Modal","Button","Form","toast","DatePicker","formatDate","Input","airports","require","airlines","FlightSearch","selectedOfferFromCity","selectedOfferToCity","errors","setErrors","flightData","state","loading","myData","searchData","formData","flyingFrom","setFlyingFrom","flyingTo","setFlyingTo","date","Date","setDate","getDate","returnDate","setReturnDate","departureDate","setDepartureDate","adultPassengers","setAdultPassengers","childPassengers","setChildrens","youthPassengers","setYouth","infantPassengers","setInfant","totalPassenger","setTotalPassenger","directFlight","setDirectFlight","filterBy","setFilterBy","filterByCallback","option","props","fs","toLowerCase","indexOf","text","airline","setAirline","prefferedClass","setPrefferedClass","tripType","setTripType","show","setShow","multiFlightSegmentForm","setMultiFlightSegmentForm","console","log","document","querySelector","click","validate","values","errorsObj","codeToCity","code","items","filter","item","city","name","countryName","oneWeek","nextWeek","getFullYear","getMonth","addFlightSegment","length","removeFlightSegment","index","multiCityState","abc","splice","changeFlightSegmentValue","value","multiCityData","handleShow","handleClose","router","dispatch","MyFocusState","setMyFocusState","handleFlightSearch","e","originCity","destinationCity","preventDefault","dataa","OTA_AirLowFareSearchRQ","DirectFlightsOnly","AvailableFlightsOnly","Version","POS","Source","PseudoCityCode","RequestorID","Type","ID","CompanyName","Code","content","OriginDestinationInformation","TravelPreferences","ValidInterlineTicket","TravelerInfoSummary","SeatsRequested","parseInt","AirTravelerAvail","PassengerTypeQuantity","TPA_Extensions","IntelliSellTransaction","RequestType","Name","push","Quantity","VoluntaryChanges","Match","VendorPref","PreferLevel","data","entries","RPH","DepartureDateTime","OriginLocation","LocationCode","DestinationLocation","dataMissingError","error","position","handleModalSubmit","filterByFields"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport { Typeahead } from 'react-bootstrap-typeahead'\nimport 'react-bootstrap-typeahead/css/Typeahead.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { requestFlightData } from '../../redux/actions/flightActions'\nimport { CircularProgress } from '@material-ui/core'\nimport { Modal, Button, Form } from 'react-bootstrap'\nimport { toast } from 'react-toastify'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { formatDate } from '../../public/js/utils'\nimport {Input} from '@material-ui/core';\n\n\nconst airports = require('iata-airports/active_airports.json')\nconst airlines = require('iata-airlines/active_airlines.json')\n\nconst FlightSearch = ({ selectedOfferFromCity, selectedOfferToCity }) => {\n  const [errors, setErrors] = useState({})\n  const flightData = useSelector((state) => state.flightData)\n  const { loading } = flightData\n  const myData = flightData?.searchData?.formData\n\n  const [flyingFrom, setFlyingFrom] = useState(\n    selectedOfferFromCity || myData?.flyingFrom || ''\n  )\n  const [flyingTo, setFlyingTo] = useState(\n    selectedOfferToCity || myData?.flyingTo || ''\n  )\n\n  var date = new Date()\n  date.setDate(date.getDate() + 7)\n  const [returnDate, setReturnDate] = useState(myData?.returnDate || '' || date)\n  const [departureDate, setDepartureDate] = useState(\n    myData?.departureDate || new Date()\n  )\n  const [adultPassengers, setAdultPassengers] = useState(\n    myData?.adultPassengers || 1\n  )\n  const [childPassengers, setChildrens] = useState(myData?.childPassengers || 0)\n  const [youthPassengers, setYouth] = useState(myData?.youthPassengers || 0)\n  const [infantPassengers, setInfant] = useState(myData?.infantPassengers || 0)\n  const [totalPassenger, setTotalPassenger] = useState([\n    adultPassengers + childPassengers + youthPassengers + infantPassengers,\n  ])\n  const [directFlight, setDirectFlight] = useState(\n    myData?.directFlight || false\n  )\n  const [filterBy, setFilterBy] = useState('callback')\n  const filterByCallback = (option, props) =>\n    option.fs.toLowerCase().indexOf(props.text.toLowerCase()) !== -1\n  const [airline, setAirline] = useState('')\n  const [prefferedClass, setPrefferedClass] = useState(\n    myData?.prefferedClass || ''\n  )\n  const [tripType, setTripType] = useState(myData?.tripType || 'roundTrip')\n  const [show, setShow] = useState(false)\n\n  const [multiFlightSegmentForm, setMultiFlightSegmentForm] = useState(\n    myData?.multiFlightSegmentForm || [\n      {\n        flyingFrom: '',\n        flyingTo: '',\n        departureDate: '',\n      },\n      {\n        flyingFrom: '',\n        flyingTo: '',\n        departureDate: '',\n      },\n    ]\n  )\n  useEffect(async () => {\n    console.log('Values updated', selectedOfferFromCity, selectedOfferToCity)\n    await setFlyingFrom(selectedOfferFromCity)\n    await setFlyingTo(selectedOfferToCity)\n\n    if (selectedOfferFromCity) {\n      document.querySelector('#button1').click()\n      console.log('clicked')\n    }\n  }, [selectedOfferFromCity, selectedOfferToCity])\n\n  useEffect(() => {\n    console.log(\"errors\", errors)\n  }, [errors])\n\n  const validate = (values) => {\n    const errorsObj = {}\n    if (!values.flyingFrom) {\n      errorsObj.flyingFrom = \"Flying From is required\"\n    }\n    if (!values.flyingTo) {\n      errorsObj.flyingTo = \"Flying To is required\"\n    }\n    if (!values.returnDate) {\n      errorsObj.returnDate = \"Return Date is required\"\n    }\n    if (!values.departureDate) {\n      errorsObj.departureDate = \"Departure Date is required\"\n    }\n    console.log(\"errorsObj\", errorsObj)\n    return errorsObj;\n  }\n\n  const codeToCity = (code) => {\n    let items = airports.filter((item) => item.fs === code)\n    return `${items[0].fs} - ${items[0].city} - ${items[0].name} - ${items[0].countryName}`\n  }\n  const oneWeek = (date) => {\n    const nextWeek = new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate() + 7\n    )\n    return nextWeek\n  }\n\n  const addFlightSegment = () => {\n    if (multiFlightSegmentForm.length > 4) return\n\n    setMultiFlightSegmentForm([\n      ...multiFlightSegmentForm,\n      {\n        flyingFrom: '',\n        flyingTo: '',\n        departureDate: '',\n      },\n    ])\n  }\n\n  const removeFlightSegment = (index) => {\n    let multiCityState = multiFlightSegmentForm\n    const abc = multiCityState.splice(index, 1)\n    setMultiFlightSegmentForm([...multiCityState])\n  }\n\n  const changeFlightSegmentValue = (name, value, index) => {\n    let multiCityData = multiFlightSegmentForm\n    multiCityData[index][name] = value\n    setMultiFlightSegmentForm([...multiCityData])\n  }\n\n  const handleShow = () => setShow(true)\n  const handleClose = () => setShow(false)\n\n  const router = useRouter()\n\n  const dispatch = useDispatch()\n\n  const [MyFocusState, setMyFocusState] = useState(false)\n\n  const handleFlightSearch = (e) => {\n    const originCity = flyingFrom || myData?.flyingFrom\n    const destinationCity = flyingTo || myData?.flyingTo\n\n    e.preventDefault()\n    const formData = {\n      flyingFrom: originCity,\n      flyingTo: destinationCity,\n      returnDate,\n      departureDate,\n      adultPassengers,\n      childPassengers,\n      youthPassengers,\n      infantPassengers,\n      totalPassenger,\n      prefferedClass,\n      multiFlightSegmentForm,\n      tripType,\n      directFlight,\n    }\n    setErrors(validate(formData))\n    console.log(\"formData\", formData)\n    if (\n      !(\n        adultPassengers > 0 ||\n        youthPassengers > 0 ||\n        childPassengers > 0 ||\n        infantPassengers > 0\n      )\n    ) {\n      // dataMissingError()\n      return\n    }\n\n    const dataa = {\n      OTA_AirLowFareSearchRQ: {\n        DirectFlightsOnly: directFlight,\n        AvailableFlightsOnly: true,\n        Version: '4.1.0',\n        POS: {\n          Source: [\n            {\n              PseudoCityCode: 'I8QK',\n              RequestorID: {\n                Type: '1',\n                ID: '1',\n                CompanyName: {\n                  Code: 'TN',\n                  content: 'TN',\n                },\n              },\n            },\n          ],\n        },\n        OriginDestinationInformation: [],\n        TravelPreferences: {\n          ValidInterlineTicket: true,\n        },\n        TravelerInfoSummary: {\n          SeatsRequested: [\n            parseInt(adultPassengers) +\n            parseInt(childPassengers) +\n            parseInt(infantPassengers) +\n            parseInt(youthPassengers),\n          ],\n          AirTravelerAvail: [\n            {\n              PassengerTypeQuantity: [],\n            },\n          ],\n        },\n        TPA_Extensions: {\n          IntelliSellTransaction: {\n            RequestType: {\n              Name: '50ITINS',\n            },\n          },\n        },\n      },\n    }\n\n    if (adultPassengers > 0) {\n      dataa.OTA_AirLowFareSearchRQ.TravelerInfoSummary.AirTravelerAvail[0].PassengerTypeQuantity.push(\n        {\n          Code: 'ADT',\n          Quantity: parseInt(adultPassengers),\n          TPA_Extensions: {\n            VoluntaryChanges: {\n              Match: 'Info',\n            },\n          },\n        }\n      )\n    }\n    if (childPassengers > 0) {\n      dataa.OTA_AirLowFareSearchRQ.TravelerInfoSummary.AirTravelerAvail[0].PassengerTypeQuantity.push(\n        {\n          Code: 'CNN',\n          Quantity: parseInt(childPassengers),\n          TPA_Extensions: {\n            VoluntaryChanges: {\n              Match: 'Info',\n            },\n          },\n        }\n      )\n    }\n    if (youthPassengers > 0) {\n      dataa.OTA_AirLowFareSearchRQ.TravelerInfoSummary.AirTravelerAvail[0].PassengerTypeQuantity.push(\n        {\n          Code: 'YTH',\n          Quantity: parseInt(youthPassengers),\n          TPA_Extensions: {\n            VoluntaryChanges: {\n              Match: 'Info',\n            },\n          },\n        }\n      )\n    }\n    if (infantPassengers > 0) {\n      dataa.OTA_AirLowFareSearchRQ.TravelerInfoSummary.AirTravelerAvail[0].PassengerTypeQuantity.push(\n        {\n          Code: 'INF',\n          Quantity: parseInt(infantPassengers),\n          TPA_Extensions: {\n            VoluntaryChanges: {\n              Match: 'Info',\n            },\n          },\n        }\n      )\n    }\n    if (airline !== '') {\n      dataa.OTA_AirLowFareSearchRQ.TravelPreferences.VendorPref = [\n        {\n          Code: airline,\n          PreferLevel: 'Preferred',\n        },\n      ]\n    }\n\n    if (tripType === 'multiCity') {\n      for (let [index, data] of multiFlightSegmentForm.entries()) {\n        if (!data.flyingFrom || !data.flyingTo || !data.departureDate) {\n          // dataMissingError()\n          return\n        } else {\n          dataa.OTA_AirLowFareSearchRQ.OriginDestinationInformation.push({\n            RPH: index + 1 + '',\n            DepartureDateTime: `${formatDate(data.departureDate)}`,\n            OriginLocation: {\n              LocationCode: data.flyingFrom,\n            },\n            DestinationLocation: {\n              LocationCode: data.flyingTo,\n            },\n          })\n        }\n      }\n      dispatch(requestFlightData({ dataa, formData }))\n      router.push('/flight')\n    } else {\n      if (originCity && destinationCity && departureDate) {\n        dataa.OTA_AirLowFareSearchRQ.OriginDestinationInformation.push({\n          RPH: '1',\n          DepartureDateTime: `${formatDate(departureDate)}`,\n          OriginLocation: {\n            LocationCode: originCity,\n          },\n          DestinationLocation: {\n            LocationCode: destinationCity,\n          },\n        })\n\n        if (tripType === 'roundTrip') {\n          if (!returnDate) {\n            // dataMissingError()\n            return\n          }\n\n          dataa.OTA_AirLowFareSearchRQ.OriginDestinationInformation.push({\n            RPH: '2',\n            DepartureDateTime: `${formatDate(returnDate)}`,\n            OriginLocation: {\n              LocationCode: destinationCity,\n            },\n            DestinationLocation: {\n              LocationCode: originCity,\n            },\n          })\n        }\n        dispatch(requestFlightData({ dataa, formData }))\n        router.push('/flight')\n      } else {\n        // dataMissingError()\n      }\n    }\n  }\n\n  const dataMissingError = () => {\n    toast.error('Please fill all required fields', {\n      position: 'bottom-right',\n    })\n  }\n\n  const handleModalSubmit = (e) => {\n    e.preventDefault()\n    handleClose()\n  }\n  const filterByFields = ['fs', 'city']\n  return (\n  <>\n   \n  </>\n  )\n}\n\nexport default FlightSearch\n"]},"metadata":{},"sourceType":"module"}