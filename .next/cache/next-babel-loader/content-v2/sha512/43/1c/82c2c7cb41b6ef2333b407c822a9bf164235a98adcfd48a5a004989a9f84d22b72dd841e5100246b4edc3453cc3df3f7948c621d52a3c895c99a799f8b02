{"ast":null,"code":"import _regeneratorRuntime from \"D:/flight380-Mar12-master/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(flightSaga),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(flightValidation),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(pnrCreation),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(bookingCreation),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(getSavedBooking);\n\nimport { put, call } from 'redux-saga/effects';\nimport { checkFlightValidation, createBookingService, createPnrService, getBookingService, getFlightService } from '../services/flightService';\nimport { bookingSavedd, flightISValid, flightNotValid, getFlightData, getSavedBookingFailed, pnrCreated, pnrCreationFailed, requestFlightFailed, saveBookingFailed, savedBookingRec } from '../actions/flightActions';\nexport function flightSaga(payload) {\n  var response, data;\n  return _regeneratorRuntime.wrap(function flightSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(getFlightService, payload);\n\n        case 3:\n          response = _context.sent;\n          data = response;\n          _context.next = 7;\n          return put(getFlightData(data));\n\n        case 7:\n          _context.next = 13;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 13;\n          return put(requestFlightFailed(_context.t0));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\nexport function flightValidation(payload) {\n  var response;\n  return _regeneratorRuntime.wrap(function flightValidation$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(checkFlightValidation, payload);\n\n        case 3:\n          response = _context2.sent;\n          _context2.next = 6;\n          return put(flightISValid(response));\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put(flightNotValid(_context2.t0));\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\nexport function pnrCreation(payload) {\n  var response;\n  return _regeneratorRuntime.wrap(function pnrCreation$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(payload);\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(createPnrService, payload);\n\n        case 4:\n          response = _context3.sent;\n          _context3.next = 7;\n          return put(pnrCreated(response));\n\n        case 7:\n          _context3.next = 13;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.next = 13;\n          return put(pnrCreationFailed(_context3.t0.message));\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[1, 9]]);\n}\nexport function bookingCreation(payload) {\n  var response;\n  return _regeneratorRuntime.wrap(function bookingCreation$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(createBookingService, payload);\n\n        case 3:\n          response = _context4.sent;\n          _context4.next = 6;\n          return put(bookingSavedd(response));\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put(saveBookingFailed(_context4.t0.message));\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\nexport function getSavedBooking(payload) {\n  var response;\n  return _regeneratorRuntime.wrap(function getSavedBooking$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(getBookingService, payload);\n\n        case 3:\n          response = _context5.sent;\n          _context5.next = 6;\n          return put(savedBookingRec(response));\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put(getSavedBookingFailed(_context5.t0));\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}","map":{"version":3,"sources":["D:/flight380-Mar12-master/redux/sagas/flightSaga.js"],"names":["flightSaga","flightValidation","pnrCreation","bookingCreation","getSavedBooking","put","call","checkFlightValidation","createBookingService","createPnrService","getBookingService","getFlightService","bookingSavedd","flightISValid","flightNotValid","getFlightData","getSavedBookingFailed","pnrCreated","pnrCreationFailed","requestFlightFailed","saveBookingFailed","savedBookingRec","payload","response","data","console","log","message"],"mappings":";;oDAqBiBA,U;qDASAC,gB;qDAQAC,W;qDASAC,e;qDAQAC,e;;AAvDjB,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AACA,SACEC,qBADF,EAEEC,oBAFF,EAGEC,gBAHF,EAIEC,iBAJF,EAKEC,gBALF,QAMO,2BANP;AAOA,SACEC,aADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,qBALF,EAMEC,UANF,EAOEC,iBAPF,EAQEC,mBARF,EASEC,iBATF,EAUEC,eAVF,QAWO,0BAXP;AAaA,OAAO,SAAUrB,UAAV,CAAqBsB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMhB,IAAI,CAACK,gBAAD,EAAmBW,OAAnB,CAAV;;AAFd;AAEGC,UAAAA,QAFH;AAGGC,UAAAA,IAHH,GAGUD,QAHV;AAAA;AAIH,iBAAMlB,GAAG,CAACU,aAAa,CAACS,IAAD,CAAd,CAAT;;AAJG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMH,iBAAMnB,GAAG,CAACc,mBAAmB,aAApB,CAAT;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASP,OAAO,SAAUlB,gBAAV,CAA2BqB,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMhB,IAAI,CAACC,qBAAD,EAAwBe,OAAxB,CAAV;;AAFd;AAEGC,UAAAA,QAFH;AAAA;AAGH,iBAAMlB,GAAG,CAACQ,aAAa,CAACU,QAAD,CAAd,CAAT;;AAHG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKH,iBAAMlB,GAAG,CAACS,cAAc,cAAf,CAAT;;AALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQP,OAAO,SAAUZ,WAAV,CAAsBoB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AACLG,UAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AADK;AAAA;AAGc,iBAAMhB,IAAI,CAACG,gBAAD,EAAmBa,OAAnB,CAAV;;AAHd;AAGGC,UAAAA,QAHH;AAAA;AAIH,iBAAMlB,GAAG,CAACY,UAAU,CAACM,QAAD,CAAX,CAAT;;AAJG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMH,iBAAMlB,GAAG,CAACa,iBAAiB,CAAC,aAAMS,OAAP,CAAlB,CAAT;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASP,OAAO,SAAUxB,eAAV,CAA0BmB,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMhB,IAAI,CAACE,oBAAD,EAAuBc,OAAvB,CAAV;;AAFd;AAEGC,UAAAA,QAFH;AAAA;AAGH,iBAAMlB,GAAG,CAACO,aAAa,CAACW,QAAD,CAAd,CAAT;;AAHG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKH,iBAAMlB,GAAG,CAACe,iBAAiB,CAAC,aAAMO,OAAP,CAAlB,CAAT;;AALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQP,OAAO,SAAUvB,eAAV,CAA0BkB,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMhB,IAAI,CAACI,iBAAD,EAAoBY,OAApB,CAAV;;AAFd;AAEGC,UAAAA,QAFH;AAAA;AAGH,iBAAMlB,GAAG,CAACgB,eAAe,CAACE,QAAD,CAAhB,CAAT;;AAHG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKH,iBAAMlB,GAAG,CAACW,qBAAqB,cAAtB,CAAT;;AALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put, call } from 'redux-saga/effects'\nimport {\n  checkFlightValidation,\n  createBookingService,\n  createPnrService,\n  getBookingService,\n  getFlightService,\n} from '../services/flightService'\nimport {\n  bookingSavedd,\n  flightISValid,\n  flightNotValid,\n  getFlightData,\n  getSavedBookingFailed,\n  pnrCreated,\n  pnrCreationFailed,\n  requestFlightFailed,\n  saveBookingFailed,\n  savedBookingRec,\n} from '../actions/flightActions'\n\nexport function* flightSaga(payload) {\n  try {\n    const response = yield call(getFlightService, payload)\n    const data = response\n    yield put(getFlightData(data))\n  } catch (error) {\n    yield put(requestFlightFailed(error))\n  }\n}\nexport function* flightValidation(payload) {\n  try {\n    const response = yield call(checkFlightValidation, payload)\n    yield put(flightISValid(response))\n  } catch (error) {\n    yield put(flightNotValid(error))\n  }\n}\nexport function* pnrCreation(payload) {\n  console.log(payload)\n  try {\n    const response = yield call(createPnrService, payload)\n    yield put(pnrCreated(response))\n  } catch (error) {\n    yield put(pnrCreationFailed(error.message))\n  }\n}\nexport function* bookingCreation(payload) {\n  try {\n    const response = yield call(createBookingService, payload)\n    yield put(bookingSavedd(response))\n  } catch (error) {\n    yield put(saveBookingFailed(error.message))\n  }\n}\nexport function* getSavedBooking(payload) {\n  try {\n    const response = yield call(getBookingService, payload)\n    yield put(savedBookingRec(response))\n  } catch (error) {\n    yield put(getSavedBookingFailed(error))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}