{"ast":null,"code":"import { put, call } from 'redux-saga/effects';\nimport { checkFlightValidation, createBookingService, createPnrService, getBookingService, getFlightService } from '../services/flightService';\nimport { bookingSavedd, flightISValid, flightNotValid, getFlightData, getSavedBookingFailed, pnrCreated, pnrCreationFailed, requestFlightFailed, saveBookingFailed, savedBookingRec } from '../actions/flightActions';\nexport function* flightSaga(payload) {\n  try {\n    const response = yield call(getFlightService, payload);\n    const data = response;\n    yield put(getFlightData(data));\n  } catch (error) {\n    yield put(requestFlightFailed(error));\n  }\n}\nexport function* flightValidation(payload) {\n  try {\n    const response = yield call(checkFlightValidation, payload);\n    yield put(flightISValid(response));\n  } catch (error) {\n    yield put(flightNotValid(error));\n  }\n}\nexport function* pnrCreation(payload) {\n  console.log(payload);\n\n  try {\n    const response = yield call(createPnrService, payload);\n    yield put(pnrCreated(response));\n  } catch (error) {\n    yield put(pnrCreationFailed(error.message));\n  }\n}\nexport function* bookingCreation(payload) {\n  try {\n    const response = yield call(createBookingService, payload);\n    yield put(bookingSavedd(response));\n  } catch (error) {\n    yield put(saveBookingFailed(error.message));\n  }\n}\nexport function* getSavedBooking(payload) {\n  try {\n    const response = yield call(getBookingService, payload);\n    yield put(savedBookingRec(response));\n  } catch (error) {\n    yield put(getSavedBookingFailed(error));\n  }\n}","map":{"version":3,"sources":["D:/flight380-Mar12-master/redux/sagas/flightSaga.js"],"names":["put","call","checkFlightValidation","createBookingService","createPnrService","getBookingService","getFlightService","bookingSavedd","flightISValid","flightNotValid","getFlightData","getSavedBookingFailed","pnrCreated","pnrCreationFailed","requestFlightFailed","saveBookingFailed","savedBookingRec","flightSaga","payload","response","data","error","flightValidation","pnrCreation","console","log","message","bookingCreation","getSavedBooking"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AACA,SACEC,qBADF,EAEEC,oBAFF,EAGEC,gBAHF,EAIEC,iBAJF,EAKEC,gBALF,QAMO,2BANP;AAOA,SACEC,aADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,qBALF,EAMEC,UANF,EAOEC,iBAPF,EAQEC,mBARF,EASEC,iBATF,EAUEC,eAVF,QAWO,0BAXP;AAaA,OAAO,UAAUC,UAAV,CAAqBC,OAArB,EAA8B;AACnC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMlB,IAAI,CAACK,gBAAD,EAAmBY,OAAnB,CAA3B;AACA,UAAME,IAAI,GAAGD,QAAb;AACA,UAAMnB,GAAG,CAACU,aAAa,CAACU,IAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACc,mBAAmB,CAACO,KAAD,CAApB,CAAT;AACD;AACF;AACD,OAAO,UAAUC,gBAAV,CAA2BJ,OAA3B,EAAoC;AACzC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMlB,IAAI,CAACC,qBAAD,EAAwBgB,OAAxB,CAA3B;AACA,UAAMlB,GAAG,CAACQ,aAAa,CAACW,QAAD,CAAd,CAAT;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACS,cAAc,CAACY,KAAD,CAAf,CAAT;AACD;AACF;AACD,OAAO,UAAUE,WAAV,CAAsBL,OAAtB,EAA+B;AACpCM,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMlB,IAAI,CAACG,gBAAD,EAAmBc,OAAnB,CAA3B;AACA,UAAMlB,GAAG,CAACY,UAAU,CAACO,QAAD,CAAX,CAAT;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACa,iBAAiB,CAACQ,KAAK,CAACK,OAAP,CAAlB,CAAT;AACD;AACF;AACD,OAAO,UAAUC,eAAV,CAA0BT,OAA1B,EAAmC;AACxC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMlB,IAAI,CAACE,oBAAD,EAAuBe,OAAvB,CAA3B;AACA,UAAMlB,GAAG,CAACO,aAAa,CAACY,QAAD,CAAd,CAAT;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACe,iBAAiB,CAACM,KAAK,CAACK,OAAP,CAAlB,CAAT;AACD;AACF;AACD,OAAO,UAAUE,eAAV,CAA0BV,OAA1B,EAAmC;AACxC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMlB,IAAI,CAACI,iBAAD,EAAoBa,OAApB,CAA3B;AACA,UAAMlB,GAAG,CAACgB,eAAe,CAACG,QAAD,CAAhB,CAAT;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACW,qBAAqB,CAACU,KAAD,CAAtB,CAAT;AACD;AACF","sourcesContent":["import { put, call } from 'redux-saga/effects'\nimport {\n  checkFlightValidation,\n  createBookingService,\n  createPnrService,\n  getBookingService,\n  getFlightService,\n} from '../services/flightService'\nimport {\n  bookingSavedd,\n  flightISValid,\n  flightNotValid,\n  getFlightData,\n  getSavedBookingFailed,\n  pnrCreated,\n  pnrCreationFailed,\n  requestFlightFailed,\n  saveBookingFailed,\n  savedBookingRec,\n} from '../actions/flightActions'\n\nexport function* flightSaga(payload) {\n  try {\n    const response = yield call(getFlightService, payload)\n    const data = response\n    yield put(getFlightData(data))\n  } catch (error) {\n    yield put(requestFlightFailed(error))\n  }\n}\nexport function* flightValidation(payload) {\n  try {\n    const response = yield call(checkFlightValidation, payload)\n    yield put(flightISValid(response))\n  } catch (error) {\n    yield put(flightNotValid(error))\n  }\n}\nexport function* pnrCreation(payload) {\n  console.log(payload)\n  try {\n    const response = yield call(createPnrService, payload)\n    yield put(pnrCreated(response))\n  } catch (error) {\n    yield put(pnrCreationFailed(error.message))\n  }\n}\nexport function* bookingCreation(payload) {\n  try {\n    const response = yield call(createBookingService, payload)\n    yield put(bookingSavedd(response))\n  } catch (error) {\n    yield put(saveBookingFailed(error.message))\n  }\n}\nexport function* getSavedBooking(payload) {\n  try {\n    const response = yield call(getBookingService, payload)\n    yield put(savedBookingRec(response))\n  } catch (error) {\n    yield put(getSavedBookingFailed(error))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}