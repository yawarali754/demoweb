{"ast":null,"code":"import { toast } from 'react-toastify';\nexport var getPackagesService = function getPackagesService() {\n  var GET_PACKAGES_API = \"https://ota-structured.herokuapp.com/api/package/read_pack\";\n  var parameters = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    return fetch(GET_PACKAGES_API, parameters).then(function (response) {\n      if (response.status >= 300) {\n        throw new Error('Server response with Error');\n      }\n\n      return response.json();\n    }).then(function (json) {\n      return json;\n    });\n  } catch (error) {\n    toast.error(error.message, {\n      position: 'bottom-right'\n    });\n    return error.message;\n  }\n};\nexport var createPackagesService = function createPackagesService(request) {\n  var CREATE_PACKAGE_API = \"https://ota-structured.herokuapp.com/api/package/create_pack\";\n  var parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request.createPackage)\n  };\n\n  try {\n    return fetch(CREATE_PACKAGE_API, parameters).then(function (response) {\n      if (response.status >= 300) {\n        throw new Error('Server response with Error');\n      }\n\n      return response.json();\n    }).then(function (json) {\n      return json;\n    });\n  } catch (error) {\n    toast.error(error.message, {\n      position: 'bottom-right'\n    });\n    return error.message;\n  }\n};\nexport var deletePackagesService = function deletePackagesService(request) {\n  var DELETE_PACKAGE_API = \"https://ota-structured.herokuapp.com/api/package/delete_pack\";\n  var parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request.packageID)\n  };\n\n  try {\n    return fetch(DELETE_PACKAGE_API, parameters).then(function (response) {\n      if (response.status >= 300) {\n        throw new Error('Server response with Error');\n      }\n\n      return response.json();\n    }).then(function (json) {\n      toast.success(json.msg, {\n        position: 'bottom-right'\n      });\n      return json;\n    });\n  } catch (error) {\n    toast.error(error.message, {\n      position: 'bottom-right'\n    });\n    return error.message;\n  }\n};\nexport var updatePackagesService = function updatePackagesService(request) {\n  var UPDATE_PACKAGE_API = \"https://ota-structured.herokuapp.com/api/package/update_pack\";\n  var parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request.updatePackageId)\n  };\n\n  try {\n    return fetch(UPDATE_PACKAGE_API, parameters).then(function (response) {\n      if (response.status >= 300) {\n        throw new Error('Server response with Error');\n      }\n\n      return response.json();\n    }).then(function (json) {\n      toast.success(json.msg, {\n        position: 'bottom-right'\n      });\n      return json;\n    });\n  } catch (error) {\n    toast.error(error.message, {\n      position: 'bottom-right'\n    });\n    return error.message;\n  }\n};","map":{"version":3,"sources":["D:/flight380-Mar12-master/redux/services/packageService.js"],"names":["toast","getPackagesService","GET_PACKAGES_API","parameters","method","headers","fetch","then","response","status","Error","json","error","message","position","createPackagesService","request","CREATE_PACKAGE_API","body","JSON","stringify","createPackage","deletePackagesService","DELETE_PACKAGE_API","packageID","success","msg","updatePackagesService","UPDATE_PACKAGE_API","updatePackageId"],"mappings":"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","sourcesContent":["import { toast } from 'react-toastify'\n\nexport const getPackagesService = () => {\n  const GET_PACKAGES_API = `https://ota-structured.herokuapp.com/api/package/read_pack`\n  const parameters = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  }\n  try {\n    return fetch(GET_PACKAGES_API, parameters)\n      .then((response) => {\n        if (response.status >= 300) {\n          throw new Error('Server response with Error')\n        }\n        return response.json()\n      })\n      .then((json) => {\n        return json\n      })\n  } catch (error) {\n    toast.error(error.message, {\n      position: 'bottom-right',\n    })\n    return error.message\n  }\n}\n\nexport const createPackagesService = (request) => {\n  const CREATE_PACKAGE_API = `https://ota-structured.herokuapp.com/api/package/create_pack`\n  const parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(request.createPackage),\n  }\n  try {\n    return fetch(CREATE_PACKAGE_API, parameters)\n      .then((response) => {\n        if (response.status >= 300) {\n          throw new Error('Server response with Error')\n        }\n        return response.json()\n      })\n      .then((json) => {\n        return json\n      })\n  } catch (error) {\n    toast.error(error.message, {\n      position: 'bottom-right',\n    })\n    return error.message\n  }\n}\nexport const deletePackagesService = (request) => {\n  const DELETE_PACKAGE_API = `https://ota-structured.herokuapp.com/api/package/delete_pack`\n  const parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(request.packageID),\n  }\n  try {\n    return fetch(DELETE_PACKAGE_API, parameters)\n      .then((response) => {\n        if (response.status >= 300) {\n          throw new Error('Server response with Error')\n        }\n        return response.json()\n      })\n      .then((json) => {\n        toast.success(json.msg, {\n          position: 'bottom-right',\n        })\n        return json\n      })\n  } catch (error) {\n    toast.error(error.message, {\n      position: 'bottom-right',\n    })\n    return error.message\n  }\n}\nexport const updatePackagesService = (request) => {\n  const UPDATE_PACKAGE_API = `https://ota-structured.herokuapp.com/api/package/update_pack`\n  const parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(request.updatePackageId),\n  }\n  try {\n    return fetch(UPDATE_PACKAGE_API, parameters)\n      .then((response) => {\n        if (response.status >= 300) {\n          throw new Error('Server response with Error')\n        }\n        return response.json()\n      })\n      .then((json) => {\n        toast.success(json.msg, {\n          position: 'bottom-right',\n        })\n        return json\n      })\n  } catch (error) {\n    toast.error(error.message, {\n      position: 'bottom-right',\n    })\n    return error.message\n  }\n}\n"]},"metadata":{},"sourceType":"module"}