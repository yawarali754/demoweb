{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as types from '../actions/offersActions';\nconst initialState = {\n  loading: false\n};\nexport const offerReducer = (state = initialState, action) => {\n  var _state$offer, _state$offer$offer;\n\n  let offer = action;\n\n  switch (action.type) {\n    case types.CREATE_OFFER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case types.CREATED_OFFER_SUCCESSFUL:\n      console.log('stateee and offer  ', state, offer);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        offer: _objectSpread(_objectSpread({}, state.offer), {}, {\n          offer: [...state.offer.offer, offer.offerCreated]\n        }),\n        loading: false\n      });\n\n    case types.READ_OFFER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        offer,\n        loading: true\n      });\n\n    case types.OFFERS_RECEIVED:\n      console.log('read offer stateee', state);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        offer,\n        loading: false\n      });\n\n    case types.UPDATE_OFFER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        offer,\n        loading: true\n      });\n\n    case types.UPDATED_OFFER_SUCCESFUL:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        offer,\n        loading: false\n      });\n\n    case types.DELETE_OFFER:\n      const newOffer = state === null || state === void 0 ? void 0 : (_state$offer = state.offer) === null || _state$offer === void 0 ? void 0 : (_state$offer$offer = _state$offer.offer) === null || _state$offer$offer === void 0 ? void 0 : _state$offer$offer.filter(offerr => {\n        var _action$offerId;\n\n        return offerr._id !== ((_action$offerId = action.offerId) === null || _action$offerId === void 0 ? void 0 : _action$offerId._id);\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        newOffer\n      });\n\n    case types.DELETE_OFFER_SUCCESSFUL:\n      const offerArray = state === null || state === void 0 ? void 0 : state.newOffer;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        offer: {\n          offer: offerArray\n        }\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/flight380-Mar12-master/redux/reducers/offerReducer.js"],"names":["types","initialState","loading","offerReducer","state","action","offer","type","CREATE_OFFER","CREATED_OFFER_SUCCESSFUL","console","log","offerCreated","READ_OFFER","OFFERS_RECEIVED","UPDATE_OFFER","UPDATED_OFFER_SUCCESFUL","DELETE_OFFER","newOffer","filter","offerr","_id","offerId","DELETE_OFFER_SUCCESSFUL","offerArray"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;AAIA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAAA;;AAC5D,MAAIC,KAAK,GAAGD,MAAZ;;AACA,UAAQA,MAAM,CAACE,IAAf;AACE,SAAKP,KAAK,CAACQ,YAAX;AACE,6CAAYJ,KAAZ;AAAmBF,QAAAA,OAAO,EAAE;AAA5B;;AACF,SAAKF,KAAK,CAACS,wBAAX;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCP,KAAnC,EAA0CE,KAA1C;AACA,6CACKF,KADL;AAEEE,QAAAA,KAAK,kCACAF,KAAK,CAACE,KADN;AAEHA,UAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAN,CAAYA,KAAhB,EAAuBA,KAAK,CAACM,YAA7B;AAFJ,UAFP;AAMEV,QAAAA,OAAO,EAAE;AANX;;AAQF,SAAKF,KAAK,CAACa,UAAX;AACE,6CAAYT,KAAZ;AAAmBE,QAAAA,KAAnB;AAA0BJ,QAAAA,OAAO,EAAE;AAAnC;;AACF,SAAKF,KAAK,CAACc,eAAX;AACEJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCP,KAAlC;AACA,6CAAYA,KAAZ;AAAmBE,QAAAA,KAAnB;AAA0BJ,QAAAA,OAAO,EAAE;AAAnC;;AACF,SAAKF,KAAK,CAACe,YAAX;AACE,6CAAYX,KAAZ;AAAmBE,QAAAA,KAAnB;AAA0BJ,QAAAA,OAAO,EAAE;AAAnC;;AACF,SAAKF,KAAK,CAACgB,uBAAX;AACE,6CAAYZ,KAAZ;AAAmBE,QAAAA,KAAnB;AAA0BJ,QAAAA,OAAO,EAAE;AAAnC;;AACF,SAAKF,KAAK,CAACiB,YAAX;AACE,YAAMC,QAAQ,GAAGd,KAAH,aAAGA,KAAH,uCAAGA,KAAK,CAAEE,KAAV,uEAAG,aAAcA,KAAjB,uDAAG,mBAAqBa,MAArB,CACdC,MAAD;AAAA;;AAAA,eAAYA,MAAM,CAACC,GAAP,yBAAehB,MAAM,CAACiB,OAAtB,oDAAe,gBAAgBD,GAA/B,CAAZ;AAAA,OADe,CAAjB;AAGA,6CAAYjB,KAAZ;AAAmBc,QAAAA;AAAnB;;AACF,SAAKlB,KAAK,CAACuB,uBAAX;AACE,YAAMC,UAAU,GAAGpB,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEc,QAA1B;AACA,6CAAYd,KAAZ;AAAmBE,QAAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAEkB;AAAT;AAA1B;;AACF;AACE,aAAOpB,KAAP;AA/BJ;AAiCD,CAnCM","sourcesContent":["import * as types from '../actions/offersActions'\n\nconst initialState = {\n  loading: false,\n}\n\nexport const offerReducer = (state = initialState, action) => {\n  let offer = action\n  switch (action.type) {\n    case types.CREATE_OFFER:\n      return { ...state, loading: true }\n    case types.CREATED_OFFER_SUCCESSFUL:\n      console.log('stateee and offer  ', state, offer)\n      return {\n        ...state,\n        offer: {\n          ...state.offer,\n          offer: [...state.offer.offer, offer.offerCreated],\n        },\n        loading: false,\n      }\n    case types.READ_OFFER:\n      return { ...state, offer, loading: true }\n    case types.OFFERS_RECEIVED:\n      console.log('read offer stateee', state)\n      return { ...state, offer, loading: false }\n    case types.UPDATE_OFFER:\n      return { ...state, offer, loading: true }\n    case types.UPDATED_OFFER_SUCCESFUL:\n      return { ...state, offer, loading: false }\n    case types.DELETE_OFFER:\n      const newOffer = state?.offer?.offer?.filter(\n        (offerr) => offerr._id !== action.offerId?._id\n      )\n      return { ...state, newOffer }\n    case types.DELETE_OFFER_SUCCESSFUL:\n      const offerArray = state?.newOffer\n      return { ...state, offer: { offer: offerArray } }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}