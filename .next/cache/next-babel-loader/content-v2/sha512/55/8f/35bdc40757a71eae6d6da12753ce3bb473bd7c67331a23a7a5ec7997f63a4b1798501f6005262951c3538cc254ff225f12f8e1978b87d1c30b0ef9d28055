{"ast":null,"code":"import _regeneratorRuntime from \"D:/flight380-Mar12-master/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/flight380-Mar12-master/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { toast } from 'react-toastify';\n\nvar AuthenticationModel = require('./authentication_model');\n\nexport var getFlightService = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(request) {\n    var FLIGHT_SEARCH_API, authModel, abc;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            FLIGHT_SEARCH_API = \"https://api-crt.cert.havail.sabre.com/v4.2.0/shop/flights?mode=live\";\n            authModel = new AuthenticationModel({\n              apiEndPoint: 'https://api-crt.cert.havail.sabre.com',\n              secret: process.env.rest_credentials\n            });\n            _context2.next = 4;\n            return authModel.readRequest( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(accessToken) {\n                var parameters;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        parameters = {\n                          method: 'POST',\n                          headers: {\n                            Authorization: \"Bearer \".concat(accessToken),\n                            'Content-Type': 'application/json'\n                          },\n                          body: JSON.stringify(request.data.dataa)\n                        };\n                        _context.next = 3;\n                        return fetch(FLIGHT_SEARCH_API, parameters).then(function (response) {\n                          if (response.status >= 300) {\n                            throw new Error(\"Server responsed with Error \".concat(response.status));\n                          }\n\n                          return response.json();\n                        }).then(function (json) {\n                          return json;\n                        })[\"catch\"](function (error) {\n                          toast.error(error.message, {\n                            position: 'bottom-right'\n                          });\n                          return error.message;\n                        });\n\n                      case 3:\n                        return _context.abrupt(\"return\", _context.sent);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n\n          case 4:\n            abc = _context2.sent;\n            return _context2.abrupt(\"return\", abc);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getFlightService(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var checkFlightValidation = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(request) {\n    var CHECK_VALIDATION, authModel, flightVal;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            CHECK_VALIDATION = 'https://api-crt.cert.havail.sabre.com/v4/shop/flights/revalidate';\n            authModel = new AuthenticationModel({\n              apiEndPoint: 'https://api-crt.cert.havail.sabre.com',\n              secret: process.env.rest_credentials\n            });\n            _context4.next = 4;\n            return authModel.readRequest( /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(accessToken) {\n                var parameters;\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        parameters = {\n                          method: 'POST',\n                          headers: {\n                            Authorization: \"Bearer \".concat(accessToken),\n                            accept: 'application/json',\n                            'Content-Type': 'application/json'\n                          },\n                          body: JSON.stringify(request.flightData)\n                        };\n                        _context3.next = 3;\n                        return fetch(CHECK_VALIDATION, parameters).then(function (response) {\n                          if (response.status >= 300) {\n                            throw new Error(\"Server responsed with Error \".concat(response.status));\n                          }\n\n                          return response.json();\n                        }).then(function (json) {\n                          return json;\n                        })[\"catch\"](function (error) {\n                          toast.error(error.message, {\n                            position: 'bottom-right'\n                          });\n                          return error.message;\n                        });\n\n                      case 3:\n                        return _context3.abrupt(\"return\", _context3.sent);\n\n                      case 4:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x4) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n\n          case 4:\n            flightVal = _context4.sent;\n            return _context4.abrupt(\"return\", flightVal);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function checkFlightValidation(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var createPnrService = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(request) {\n    var CREATE_PNR, authModel, pnr;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            CREATE_PNR = 'https://api-crt.cert.havail.sabre.com/v2.4.0/passenger/records?mode=create';\n            authModel = new AuthenticationModel({\n              apiEndPoint: 'https://api-crt.cert.havail.sabre.com',\n              secret: process.env.rest_credentials\n            });\n            _context6.next = 4;\n            return authModel.readRequest( /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(accessToken) {\n                var parameters;\n                return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        parameters = {\n                          method: 'POST',\n                          headers: {\n                            Authorization: \"Bearer \".concat(accessToken),\n                            'Content-Type': 'application/json'\n                          },\n                          body: JSON.stringify(request.pnrRequest)\n                        };\n                        _context5.next = 3;\n                        return fetch(CREATE_PNR, parameters).then(function (response) {\n                          if (response.status >= 300) {\n                            throw new Error(\"Server responsed with Error \".concat(response.status));\n                          }\n\n                          return response.json();\n                        }).then(function (json) {\n                          return json;\n                        })[\"catch\"](function (error) {\n                          toast.error(error.message, {\n                            position: 'bottom-right'\n                          });\n                          return error.message;\n                        });\n\n                      case 3:\n                        return _context5.abrupt(\"return\", _context5.sent);\n\n                      case 4:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function (_x6) {\n                return _ref6.apply(this, arguments);\n              };\n            }());\n\n          case 4:\n            pnr = _context6.sent;\n            return _context6.abrupt(\"return\", pnr);\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function createPnrService(_x5) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var createBookingService = function createBookingService(request) {\n  var SAVE_BOOKING_API = \"https://ota-structured.herokuapp.com/api/booking/save_booking\";\n  var parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request.saveBooking)\n  };\n\n  try {\n    return fetch(SAVE_BOOKING_API, parameters).then(function (response) {\n      if (response.status >= 300) {\n        throw new Error('Server response with Error');\n      }\n\n      return response.json();\n    }).then(function (json) {\n      return json;\n    });\n  } catch (error) {\n    return error;\n  }\n};\nexport var getBookingService = function getBookingService(request) {\n  var GET_BOOKING_API = \"https://ota-structured.herokuapp.com/api/booking/get_booking\";\n  var parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(request.bookingMail)\n  };\n\n  try {\n    return fetch(GET_BOOKING_API, parameters).then(function (response) {\n      if (response.status >= 300) {\n        throw new Error('Server response with Error');\n      }\n\n      return response.json();\n    }).then(function (json) {\n      return json;\n    });\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"sources":["D:/flight380-Mar12-master/redux/services/flightService.js"],"names":["toast","AuthenticationModel","require","getFlightService","request","FLIGHT_SEARCH_API","authModel","apiEndPoint","secret","process","env","rest_credentials","readRequest","accessToken","parameters","method","headers","Authorization","body","JSON","stringify","data","dataa","fetch","then","response","status","Error","json","error","message","position","abc","checkFlightValidation","CHECK_VALIDATION","accept","flightData","flightVal","createPnrService","CREATE_PNR","pnrRequest","pnr","createBookingService","SAVE_BOOKING_API","saveBooking","getBookingService","GET_BOOKING_API","bookingMail"],"mappings":"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","sourcesContent":["import { toast } from 'react-toastify'\n\nconst AuthenticationModel = require('./authentication_model')\n\nexport const getFlightService = async (request) => {\n  const FLIGHT_SEARCH_API = `https://api-crt.cert.havail.sabre.com/v4.2.0/shop/flights?mode=live`\n\n  const authModel = new AuthenticationModel({\n    apiEndPoint: 'https://api-crt.cert.havail.sabre.com',\n    secret: process.env.rest_credentials,\n  })\n  const abc = await authModel.readRequest(async (accessToken) => {\n    const parameters = {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(request.data.dataa),\n    }\n    return await fetch(FLIGHT_SEARCH_API, parameters)\n      .then((response) => {\n        if (response.status >= 300) {\n          throw new Error(`Server responsed with Error ${response.status}`)\n        }\n        return response.json()\n      })\n      .then((json) => {\n        return json\n      })\n      .catch((error) => {\n        toast.error(error.message, {\n          position: 'bottom-right',\n        })\n        return error.message\n      })\n  })\n\n  return abc\n}\nexport const checkFlightValidation = async (request) => {\n  const CHECK_VALIDATION =\n    'https://api-crt.cert.havail.sabre.com/v4/shop/flights/revalidate'\n\n  const authModel = new AuthenticationModel({\n    apiEndPoint: 'https://api-crt.cert.havail.sabre.com',\n    secret: process.env.rest_credentials,\n  })\n  const flightVal = await authModel.readRequest(async (accessToken) => {\n    const parameters = {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(request.flightData),\n    }\n    return await fetch(CHECK_VALIDATION, parameters)\n      .then((response) => {\n        if (response.status >= 300) {\n          throw new Error(`Server responsed with Error ${response.status}`)\n        }\n        return response.json()\n      })\n      .then((json) => {\n        return json\n      })\n      .catch((error) => {\n        toast.error(error.message, {\n          position: 'bottom-right',\n        })\n        return error.message\n      })\n  })\n\n  return flightVal\n}\nexport const createPnrService = async (request) => {\n  const CREATE_PNR =\n    'https://api-crt.cert.havail.sabre.com/v2.4.0/passenger/records?mode=create'\n  const authModel = new AuthenticationModel({\n    apiEndPoint: 'https://api-crt.cert.havail.sabre.com',\n    secret: process.env.rest_credentials,\n  })\n  const pnr = await authModel.readRequest(async (accessToken) => {\n    const parameters = {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(request.pnrRequest),\n    }\n    return await fetch(CREATE_PNR, parameters)\n      .then((response) => {\n        if (response.status >= 300) {\n          throw new Error(`Server responsed with Error ${response.status}`)\n        }\n        return response.json()\n      })\n      .then((json) => {\n        return json\n      })\n      .catch((error) => {\n        toast.error(error.message, {\n          position: 'bottom-right',\n        })\n        return error.message\n      })\n  })\n\n  return pnr\n}\n\nexport const createBookingService = (request) => {\n  const SAVE_BOOKING_API = `https://ota-structured.herokuapp.com/api/booking/save_booking`\n  const parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(request.saveBooking),\n  }\n  try {\n    return fetch(SAVE_BOOKING_API, parameters)\n      .then((response) => {\n        if (response.status >= 300) {\n          throw new Error('Server response with Error')\n        }\n        return response.json()\n      })\n      .then((json) => {\n        return json\n      })\n  } catch (error) {\n    return error\n  }\n}\n\nexport const getBookingService = (request) => {\n  const GET_BOOKING_API = `https://ota-structured.herokuapp.com/api/booking/get_booking`\n  const parameters = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(request.bookingMail),\n  }\n  try {\n    return fetch(GET_BOOKING_API, parameters)\n      .then((response) => {\n        if (response.status >= 300) {\n          throw new Error('Server response with Error')\n        }\n        return response.json()\n      })\n      .then((json) => {\n        return json\n      })\n  } catch (error) {\n    return error\n  }\n}\n"]},"metadata":{},"sourceType":"module"}