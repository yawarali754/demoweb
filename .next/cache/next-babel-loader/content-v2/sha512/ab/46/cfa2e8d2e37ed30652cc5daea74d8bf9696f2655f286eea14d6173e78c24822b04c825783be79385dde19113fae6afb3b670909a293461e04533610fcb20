{"ast":null,"code":"export var simplifyTime = function simplifyTime(time) {\n  var hour = new Date(time).getHours();\n  var minutes = new Date(time).getMinutes();\n  return \"\".concat(prefixZero(hour), \" : \").concat(prefixZero(minutes));\n};\nexport var prefixZero = function prefixZero(number) {\n  return (number + '').length > 1 ? number + '' : '0' + number;\n};\nexport var minuteToTime = function minuteToTime(minute) {\n  return Math.floor(minute / 60) + 'hr ' + minute % 60 + 'min';\n};\nexport var calculateStop = function calculateStop(segments) {\n  return segments.length - 1 > 0 ? segments.length - 1 + ' Stop' : 'Non-Stop';\n};\nexport var changePassengerCode = function changePassengerCode(codes) {\n  if (codes === 'ADT') {\n    return 'Adult';\n  }\n\n  if (codes === 'CNN') {\n    return 'Child';\n  }\n\n  if (codes === 'YTH') {\n    return 'Youth';\n  }\n\n  if (codes === 'INF') {\n    return 'Infant';\n  }\n};\nexport var changePassengerType = function changePassengerType(type) {\n  if (type === 'adultPassengers') {\n    return 'ADT';\n  }\n\n  if (type === 'childPassengers') {\n    return 'CNN';\n  }\n\n  if (type === 'youthPassengers') {\n    return 'YTH';\n  }\n\n  if (type === 'infantPassengers') {\n    return 'INF';\n  }\n};\nexport var formatDate = function formatDate(date) {\n  var str = date.toISOString();\n  return str.substring(0, str.length - 5);\n};","map":{"version":3,"sources":["D:/flight380-Mar12-master/public/js/utils.js"],"names":["simplifyTime","time","hour","Date","getHours","minutes","getMinutes","prefixZero","number","length","minuteToTime","minute","Math","floor","calculateStop","segments","changePassengerCode","codes","changePassengerType","type","formatDate","date","str","toISOString","substring"],"mappings":"AAAA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AACpC,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,IAAT,EAAeG,QAAf,EAAX;AACA,MAAIC,OAAO,GAAG,IAAIF,IAAJ,CAASF,IAAT,EAAeK,UAAf,EAAd;AACA,mBAAUC,UAAU,CAACL,IAAD,CAApB,gBAAgCK,UAAU,CAACF,OAAD,CAA1C;AACD,CAJM;AAKP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD;AAAA,SACxB,CAACA,MAAM,GAAG,EAAV,EAAcC,MAAd,GAAuB,CAAvB,GAA2BD,MAAM,GAAG,EAApC,GAAyC,MAAMA,MADvB;AAAA,CAAnB;AAGP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD;AAAA,SAC1BC,IAAI,CAACC,KAAL,CAAWF,MAAM,GAAG,EAApB,IAA0B,KAA1B,GAAmCA,MAAM,GAAG,EAA5C,GAAkD,KADxB;AAAA,CAArB;AAGP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD;AAAA,SAC3BA,QAAQ,CAACN,MAAT,GAAkB,CAAlB,GAAsB,CAAtB,GAA0BM,QAAQ,CAACN,MAAT,GAAkB,CAAlB,GAAsB,OAAhD,GAA0D,UAD/B;AAAA,CAAtB;AAGP,OAAO,IAAMO,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AAC5C,MAAIA,KAAK,KAAK,KAAd,EAAqB;AACnB,WAAO,OAAP;AACD;;AACD,MAAIA,KAAK,KAAK,KAAd,EAAqB;AACnB,WAAO,OAAP;AACD;;AACD,MAAIA,KAAK,KAAK,KAAd,EAAqB;AACnB,WAAO,OAAP;AACD;;AACD,MAAIA,KAAK,KAAK,KAAd,EAAqB;AACnB,WAAO,QAAP;AACD;AACF,CAbM;AAcP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAU;AAC3C,MAAIA,IAAI,KAAK,iBAAb,EAAgC;AAC9B,WAAO,KAAP;AACD;;AACD,MAAIA,IAAI,KAAK,iBAAb,EAAgC;AAC9B,WAAO,KAAP;AACD;;AACD,MAAIA,IAAI,KAAK,iBAAb,EAAgC;AAC9B,WAAO,KAAP;AACD;;AACD,MAAIA,IAAI,KAAK,kBAAb,EAAiC;AAC/B,WAAO,KAAP;AACD;AACF,CAbM;AAeP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAClC,MAAIC,GAAG,GAAGD,IAAI,CAACE,WAAL,EAAV;AACA,SAAOD,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiBF,GAAG,CAACb,MAAJ,GAAa,CAA9B,CAAP;AACD,CAHM","sourcesContent":["export const simplifyTime = (time) => {\n  let hour = new Date(time).getHours()\n  let minutes = new Date(time).getMinutes()\n  return `${prefixZero(hour)} : ${prefixZero(minutes)}`\n}\nexport const prefixZero = (number) =>\n  (number + '').length > 1 ? number + '' : '0' + number\n\nexport const minuteToTime = (minute) =>\n  Math.floor(minute / 60) + 'hr ' + (minute % 60) + 'min'\n\nexport const calculateStop = (segments) =>\n  segments.length - 1 > 0 ? segments.length - 1 + ' Stop' : 'Non-Stop'\n\nexport const changePassengerCode = (codes) => {\n  if (codes === 'ADT') {\n    return 'Adult'\n  }\n  if (codes === 'CNN') {\n    return 'Child'\n  }\n  if (codes === 'YTH') {\n    return 'Youth'\n  }\n  if (codes === 'INF') {\n    return 'Infant'\n  }\n}\nexport const changePassengerType = (type) => {\n  if (type === 'adultPassengers') {\n    return 'ADT'\n  }\n  if (type === 'childPassengers') {\n    return 'CNN'\n  }\n  if (type === 'youthPassengers') {\n    return 'YTH'\n  }\n  if (type === 'infantPassengers') {\n    return 'INF'\n  }\n}\n\nexport const formatDate = (date) => {\n  let str = date.toISOString()\n  return str.substring(0, str.length - 5)\n}\n"]},"metadata":{},"sourceType":"module"}